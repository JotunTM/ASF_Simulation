"""
=========================================
main file for simulation environment
=========================================
"""


"""
@author: Mauro Luzzatto 
@credits: Prageeth Jayathissa, Jerimias Schmidli

02.11.2016


	
INPUT PARAMETER DEFINITION 

SimulationData:
   
   optimization_Types = Decide for which energy demand type, you want to do the optimisation for. Multiple options are possible.  ['E_total', 'Cooling', 'Heating', 'SolarEnergy', 'Lighting', 'E_HCL'] 
                           If all otpimization types are chosen, the azimuth and altitude angle plots are created as well. 
   
   DataFolderName = choose the name of the stored data, those only effects the radiaiton results generated by ladybug
   FileName = used for the PV results, enables to use same radiaiton data but with different configuration
   
   ProjectName = set name of subfolder, which shall be evaluated, for example: 'Mat0',
   SubFolder = set the name of the files within the subfolder, for example': '2ASF',
  
   ShowFig = decide if you want to create (True) or not create (False) the figures 
   Save =  decide if you want to save (True) or not save (False) the results
   
   start = set start hour of analysis, for yearly analysis = 0
   end = set end hour of analysis, for yearly analysis = 8760
   
PanelData

    XANGLES, YANGLES = only use combinations, from which the daysim data is pre calculated
    
Material

    ASF = set suffix for the saved results, so different material values can be evaluated
    Window = set suffix for the saved results, so different material values can be evaluated
 
   
 BuildingProperties:
   
   glass_solar_transmitance: Fraction of Radiation transmitting through the window []
   glass_light_transmitance: Fraction of visible light (luminance) transmitting through the window []
   lighting_load: Lighting Load [W/m2] 
   lighting_control: Lux threshold at which the lights turn on [Lx]
   U_em: U value of opaque surfaces  [W/m2K]
   U_w: U value of glazed surfaces [W/m2K]
   ACH_vent: Air changes per hour through ventilation [Air Changes Per Hour]
   ACH_infl: Air changes per hour through infiltration [Air Changes Per Hour]
   ventilation_efficiency: The efficiency of the heat recovery system for ventilation. Set to 0 if there is no heat recovery []
   c_m_A_f: Thermal capacitance of the room per floor area [J/m2K] #capcitance of the building dependent on building type: medium = 165'000, heavy = 260'000, light = 110'000, very heavy = 370'000
   theta_int_h_set : Thermal heating set point [C]
   theta_int_c_set: Thermal cooling set point [C]
   phi_c_max_A_f: Maximum cooling load. Set to -np.inf for unresctricted cooling [C]
   phi_h_max_A_f: Maximum heating load. Set to no.inf for unrestricted heating [C]
   COP_H = heating cop
   COP_C = cooling cop   
   
   
 SimulationOptions
   
   setBackTempH' = chose a setBackTemperature, it determines to what extend the building can heat up, when no people are in the building [°C]
   setBackTempC' = chose a setBackTemperature, it determines to what extend the building can cool down, when no people are in the building [°C]
   Occupancy'  = select occupancy profile file, 'Occupancy_COM.csv'
   ActuationEnergy = choose whether you want to include the the needed actuation energy for the ASF adjustment
   Temp_start = simulation starting Temperature [°C] 
   human_heat_emissions = heat emitted by a human body per hour. Source: HVAC Engineers Handbook, F. Porges # 0.12 [kWh]

"""



import os, sys
import numpy as np
import pandas as pd
from buildingSystem import *  
from SimulationClassDaySim import ASF_Simulation



SimulationData = {
'optimizationTypes' : ['E_total'],
'DataFolderName' : 'test_Mat22', 
'FileName': 'test_Mat22', 

'ProjectName': 'MatTest2',
'SubFolder': 'ASF',

'Save' : True,
'ShowFig': True,

'start' : 0,
'end': 8760} #8760

PanelData = {
"XANGLES": [45],
"YANGLES" : [0]}

Material = { # add suffix to the radiation and pv results
'ASF' : 0.2,
'Window': 0.2}






BuildingProperties = {
"glass_solar_transmitance" : 0.691,
"glass_light_transmitance" : 0.744,
"lighting_load" : 11.74,
"lighting_control" : 300,
"Lighting_Utilisation_Factor" :  0.6, #0.45,
"Lighting_MaintenanceFactor" : 0.9,
"U_em" : 0.2,
"U_w" : 1.1,
"ACH_vent" : 1.5,
"ACH_infl" :0.5,
"ventilation_efficiency" : 0.6 ,
"c_m_A_f" : 165 * 10**3,
"theta_int_h_set" : 22,
"theta_int_c_set" : 26,
"phi_c_max_A_f": -np.inf,
"phi_h_max_A_f":np.inf,
"heatingSystem" : DirectHeater,
"coolingSystem" : DirectCooler, 
"heatingEfficiency" : 1,
"coolingEfficiency" :1,
'COP_H': 3, 
'COP_C':3}

SimulationOptions= {
'setBackTempH' : 4.,
'setBackTempC' : 4., 
'Occupancy' : 'Occupancy_COM.csv',
'ActuationEnergy' : True,
'human_heat_emission' : 0.12,
'Temp_start' : 20}



if __name__=='__main__':
    ASFDAYSIM = ASF_Simulation(SimulationData = SimulationData, 
                         PanelData = PanelData, 
                         Material = Material, 
                         BuildingProperties = BuildingProperties,
                         SimulationOptions = SimulationOptions)
    ASFDAYSIM.SolveASF()
    results = ASFDAYSIM.ResultsBuildingSimulation
            
        
       
 